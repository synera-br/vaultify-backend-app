name: Go AI Code Review

on:
  push:
    branches:
      - "*"
    # paths:
    #   - "**/*.go"
    #   - "go.mod"
    #   - "go.sum"
    #   - "Dockerfile"
    #   - "docker-compose.yml"
    #   - "Makefile"

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  gemini_go_review:
    name: Gemini Go Code Review
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get changed Go files
        id: changed_files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.go
            go.mod
            go.sum
            Dockerfile
            docker-compose.yml
            Makefile
          separator: ","

      - name: Run Gemini Go analysis
        if: steps.changed_files.outputs.any_changed == 'true'
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_FULL_NAME: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node .github/scripts/analyze-gemini-go.js "${{ steps.changed_files.outputs.all_changed_files }}"

  claude_go_review:
    name: Claude Go Code Review
    runs-on: ubuntu-latest
    needs: gemini_go_review
    if: always() && github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get changed Go files
        id: changed_files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.go
            go.mod
            go.sum
            Dockerfile
            docker-compose.yml
            Makefile
          separator: ","

      - name: Run Claude Go analysis
        if: steps.changed_files.outputs.any_changed == 'true'
        env:
          CLAUDE_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_FULL_NAME: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node .github/scripts/analyze-claude-go.js "${{ steps.changed_files.outputs.all_changed_files }}"

  go_lint_and_test:
    name: Go Lint and Test
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

      - name: Run tests
        run: |
          go test -v -race -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  summary:
    name: Go Review Summary
    runs-on: ubuntu-latest
    needs: [gemini_go_review, claude_go_review, go_lint_and_test]
    if: always() && github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Post completion summary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          node .github/scripts/post-summary.js